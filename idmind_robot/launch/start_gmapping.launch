<launch>

    <arg name="initial_pose_x" value="41.05" />
    <arg name="initial_pose_y" value="15.20" />
    <arg name="initial_pose_a" value="0." />
    <arg name="initial_cov_xx" value="0.25" />
    <arg name="initial_cov_yy" value="0.25" />
    <arg name="initial_cov_aa" value="0.25" />
    <arg name="gazebo_pose_x" value="15." />
    <arg name="gazebo_pose_y" value="0.0" />

    <!-- Define real/simulation and controller type -->
    <arg name="simulation" value="true" />
    <arg name="config" value="raposa_idmind" />
    <!--<arg name="config" value="narrow_corridor" />-->
    <arg name="controller" value="joystick" />

    <!-- Load configuration from YAML -->
    <rosparam command="load" file="$(find idmind_robot)/cfg/idmind_robot.yaml" />
    <param name="simulation" type="bool" value="$(arg simulation)" />
    <param name="controller" type="string" value="$(arg controller)" />

    <!-- If is a simulation, start Gazebo -->
    <group if="$(arg simulation)">
        <!-- Static tranformations for lasers, imus and other sensors -->
        <node pkg="tf2_ros" type="static_transform_publisher" name="imu_broadcaster" args="0.04 0 0 3.14 0 0 base_link base_link_imu" />
        <node pkg="tf2_ros" type="static_transform_publisher" name="front_laser_broadcaster" args="-0.01 0 0.35 0 0 0 base_link front_laser" />

        <include file="$(find raposa_gazebo)/launch/raposa_gazebo.launch" >
            <arg name="world" value="$(arg config)" />
            <!-- for raposa_idmind -->
            <arg name="initial_pose_x" value="$(arg gazebo_pose_x)" />
            <arg name="initial_pose_y" value="$(arg gazebo_pose_y)" />
        </include>
        <node pkg="laser_filters" type="scan_to_scan_filter_chain" name="laser_filter">
            <remap from="scan" to="raw_front_scan" />
            <remap from="scan_filtered" to="front_scan" />
            <rosparam command="load" file="$(find idmind_controller)/cfg/laser_filter_config.yaml" />
        </node>

    </group>

    <!-- If not, start the IMU and Sweep Laser nodes -->
    <group unless="$(arg simulation)">
        <include file="$(find idmind_robot)/launch/start_hardware.launch" >
        </include>
    </group>

        <!-- Launch GMapping -->
    <node pkg="gmapping" type="slam_gmapping" name="gmapping" output="screen" >
        <remap from="/scan" to="/front_scan" />
        <param name="base_frame" value="base_link" />
        <param name="map_frame" value="map" />
        <param name="odom_frame" value="odom" />
        <param name="map_update_interval" value="5" />
        <param name="maxUrange" value="16" />
        <param name="xmin" value="-50" />
        <param name="xmax" value="50" />
        <param name="ymin" value="-50" />
        <param name="ymax" value="50" />
        <param name="delta" value="0.05" />
        <param name="maxRange" value="14" />
    </node>

    <!-- Start basic navigation -->
    <include file="$(find idmind_navigation)/launch/idmind_navigation.launch" />

    <!-- Joystick -->
    <include file="$(find idmind_teleop)/launch/idmind_teleop.launch" />

    <!--Start RViz -->
    <!--<node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />-->
    <!--<node name="robot_state_publisher" pkg="robot_state_publisher" type="state_publisher" />-->
    <!--<node name="rviz" pkg="rviz" type="rviz" args="-d $(find idmind_robot)/cfg/robot_gmapping.rviz"/>-->

</launch>